from aiogram import Bot, Dispatcher, types, executor
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher.filters.state import StatesGroup, State
from config import *
from aiogram.dispatcher.middlewares import BaseMiddleware
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.handler import CancelHandler
from aiogram.types import ReplyKeyboardRemove
from sqlite import *
from func import *
from keybaord import *



async def on_startup(_):
    await db_start()


storage = MemoryStorage()
bot = Bot(Api_token_telegramm_bot)
dp = Dispatcher(bot, storage=storage)

ADMIN = 558110480

class CustomMiddleware(BaseMiddleware):

    async def on_process_message(self, message: types.Message, data: dict):

        if message.from_user.id != ADMIN:
            print("–î—Ä—É–≥–æ–π –∞–∫–∫–∞—É–Ω—Ç")
            raise CancelHandler()



"""************************************************** REGISTER PROFILE *******************************************************************"""


class ProfileStatesGroup(StatesGroup):
    user_id = State()
    name = State()
    surname = State()
    age = State()
    sex = State()
    height = State()
    weight = State()
    calory = State()


# region REGISTERS USER
@dp.message_handler(commands="start")
async def cmd_start(message: types.Message):
    await message.answer("""–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫!
–ß—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –Ω–∞–∂–º–∏ - /create """, reply_markup=start_kb())
    print("world")
    await create_profile(user_id=message.from_user.id)


@dp.message_handler(commands="create")
async def cmd_create(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data["user_id"] = message.from_user.id
        data["username"] = message.from_user.username

    await message.answer("–í–∞—à–µ –∏–º—è: ", reply_markup=register_kb())
    await ProfileStatesGroup.name.set()


@dp.message_handler(lambda message: message.text == "–≤—ã–π—Ç–∏", state="*")
async def exist_register(message: types.Message, state: FSMContext):
    if state is None:
        return

    await state.finish()
    await message.answer("–í—ã –ø—Ä–µ—Ä–≤–∞–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é\n–ß—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –Ω–∞–∂–º–∏ - /create ", reply_markup=start_kb())


@dp.message_handler(lambda message: message.text.isdigit(), state=ProfileStatesGroup.name)
async def check_name(message: types.Message):
    await message.answer("–≠—Ç–æ —á–∏—Å–ª–æ —á–∏—Å–ª–æ –∞ –Ω–µ –∏–º—è!")


@dp.message_handler(state=ProfileStatesGroup.name)
async def load_name(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data["name"] = message.text

    await message.reply("–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ—é —Ñ–∞–º–∏–ª–∏—é")
    await ProfileStatesGroup.next()


@dp.message_handler(lambda message: message.text.isdigit(), state=ProfileStatesGroup.surname)
async def check_surname(message: types.Message):
    await message.answer("–≠—Ç–æ —á–∏—Å–ª–æ —á–∏—Å–ª–æ –∞ –Ω–µ –∏–º—è!")


@dp.message_handler(state=ProfileStatesGroup.surname)
async def load_surname(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data["surname"] = message.text

    await message.reply("–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç")
    await ProfileStatesGroup.next()


@dp.message_handler(lambda message: not message.text.isdigit() or float(message.text) > 99 or float(message.text) < 5,
                    state=ProfileStatesGroup.age)
async def check_age(message: types.Message):
    await message.answer("–í–≤–µ–∏–¥–∏—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç")


@dp.message_handler(state=ProfileStatesGroup.age)
async def load_age(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data["age"] = int(message.text)

    await message.reply("–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –ø–æ–ª", reply_markup=register_sex_kb())
    await ProfileStatesGroup.next()


@dp.message_handler(state=ProfileStatesGroup.sex)
async def load_sex(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data["sex"] = message.text

    await message.reply("–£–∫–∞–∂–∏—Ç–µ –≤–∞—à —Ä–æ—Å—Ç", reply_markup=register_kb())
    await ProfileStatesGroup.next()


@dp.message_handler(
    lambda message: not message.text.isdigit() or float(message.text) > 240 or float(message.text) < 100,
    state=ProfileStatesGroup.height)
async def check_age(message: types.Message):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–π —Ä–æ—Å—Ç")


@dp.message_handler(state=ProfileStatesGroup.height)
async def load_height(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data["height"] = int(message.text)

    await message.reply("–°–æ–æ–±—â–∏—Ç–µ –≤–∞—à –≤–µ—Å, –æ–±–µ—â–∞—é —ç—Ç–æ –±—É–¥–µ—Ç —Å–µ–∫—Ä–µ—Ç–æ–º ü§´ ", reply_markup=register_kb())
    await ProfileStatesGroup.next()


@dp.message_handler(lambda message: not message.text.isdigit() or float(message.text) > 240 or float(message.text) < 20,
                    state=ProfileStatesGroup.weight)
async def check_age(message: types.Message):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∞—Å—Ç–æ—è—â–∏–π –≤–µ—Å)")


@dp.message_handler(state=ProfileStatesGroup.weight)
async def load_weight(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data["weight"] = int(message.text)

        data["calory"] = calculate_calory(data["age"], data['weight'], data['height'], data['sex'])
        await message.answer(f"""
–í–∞—à–µ –∏–º—è: {data['name']}
–í–∞—à–∞ —Ñ–∞–º–∏–ª–∏—è: {data['surname']}
–í–∞—à –≤–æ–∑—Ä–∞—Å—Ç: {data['age']}
–ë–∞–∑–æ–≤—ã–π –æ–±–º–µ–Ω: {round(data["calory"])} –∫–∞–ª–æ—Ä–∏–π

–í–∞—à id: {data['user_id']}
""")

    await edit_profile(state, user_id=message.from_user.id)
    await message.answer("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–∫–æ–Ω—á–µ–Ω–∞", reply_markup=main_menu_kb())
    await state.finish()


# endregion
"""************************************************** MAIN MENU *******************************************************************"""


# region main menu

@dp.message_handler(lambda message: message.text == "–ü—Ä–æ—Ñ–∏–ª—å")
async def cmd_profiles(message: types.Message):
    profile_text = await get_profile(message.from_user.id)
    await message.answer(profile_text, parse_mode="HTML", reply_markup=main_menu_kb())
    await message.delete()


@dp.message_handler(lambda message: message.text == "–ü–æ–º–æ—â—å")
async def cmd_profiles(message: types.Message):
    await message.answer("<b>–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞: @kurilove_CRT</b>\n<b>–ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å:</b> /create", parse_mode="HTML",
                         reply_markup=main_menu_kb())
    await message.delete()


@dp.message_handler(lambda message: message.text == "–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫")
async def cmd_profiles(message: types.Message):
    await message.answer("""
–ü—Ä–∏–≤–µ—Ç! –Ø - —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ —Å–ø–æ—Ä—Ç–µ –∏ –∑–¥–æ—Ä–æ–≤–æ–º –ø–∏—Ç–∞–Ω–∏–∏.

–° –º–æ–µ–π –ø–æ–º–æ—â—å—é —Ç—ã —Å–º–æ–∂–µ—à—å –ø–æ–ª—É—á–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –≤—ã–±–æ—Ä—É –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤, –∞ —Ç–∞–∫–∂–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫, –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –¥–ª—è —Ç–≤–æ–µ–π —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π —Ñ–æ—Ä–º—ã –∏ —Ü–µ–ª–µ–π.

–Ø –ø—Ä–µ–¥–ª–∞–≥–∞—é —Å–ø–∏—Å–æ–∫ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –≥—Ä—É–ø–ø –º—ã—à—Ü –∏ —É—Ä–æ–≤–Ω–µ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏, –∞ —Ç–∞–∫–∂–µ —Ä–µ—Ü–µ–ø—Ç—ã —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –±–ª—é–¥ –∏ –¥–µ—Å–µ—Ä—Ç–æ–≤.

–¢—ã –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ç–µ–±—è —Ä–∞–∑–¥–µ–ª –∏ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª–µ–∑–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é,<b> –∞ —Ç–∞–∫–∂–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø–ª–∞–Ω –ø–æ—Ö—É–¥–µ–Ω–∏—è –∏–ª–∏ –Ω–∞–±–æ—Ä–∞ –∑–∞ –∫–æ–ø–µ–µ—á–∫—É –∞–≤—Ç–æ—Ä—É</b> üòä.

–ù–µ –∑–∞–±—ã–≤–∞–π —Å–ª–µ–¥–∏—Ç—å –∑–∞ —Å–≤–æ–∏–º –∑–¥–æ—Ä–æ–≤—å–µ–º –∏ –ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º–∏. –Ø –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –≤ —Ç–≤–æ–∏—Ö —É—Å–∏–ª–∏—è—Ö –ø–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—é —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π —Ñ–æ—Ä–º—ã –∏ –∑–¥–æ—Ä–æ–≤—å—è.
""",
                         parse_mode="HTML", reply_markup=main_menu_kb())

    await message.delete()


@dp.message_handler(lambda message: message.text == "–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏")
async def cmd_train(message: types.Message):
    await bot.send_photo(message.from_user.id,
                         photo="""https://musclefit.info/wp-content/uploads/2021/02/programma-trenirovok-na-5-dnej.jpg""",
                         caption="""–û—Ç–ª–∏—á–Ω–æ, –≤—ã–±–µ—Ä–∏ –∫–∞–∫ —Ö–æ—á–µ—à—å –∑–∞–Ω–∏–º–∞—Ç—å—Å—è """,
                         reply_markup=main_train_ikb())

    await message.delete()


# endregion
"""************************************************** –¢–†–ï–ù–ò–†–û–í–ö–ò –î–û–ú–ê *******************************************************************"""


@dp.callback_query_handler(lambda callback: callback.data == "—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏_–¥–æ–º–∞")
async def train_in_gym_menu(callback: types.CallbackQuery):
    await bot.send_photo(callback.from_user.id, photo="https://manfit.ru/local/img/home-fitness-600.jpg",
                         caption="–ö–∞–∫—É—é –æ–±–ª–∞—Å—Ç—å —Ö–æ—á–µ—à—å –ø—Ä–æ–∫–∞—á–∞—Ç—å?",
                         reply_markup=home_train_menu_ikb())
    await callback.message.delete()


# region muskle group home
@dp.callback_query_handler(lambda callback: callback.data == "–≤–µ—Ä—Ö_—Ç–µ–ª–∞_–¥–æ–º–∞")
async def home_train_upperbody_menu(callback: types.CallbackQuery):
    await bot.send_photo(callback.from_user.id,
                         photo="https://statusmen.ru/wp-content/uploads/2020/04/uprazhnenija-dlja-muzhchin-v-domashnih-uslovijah.jpg",
                         caption="–í—ã–±–µ—Ä–∏ –≥—Ä—É–ø–ø—É –º—ã—à—Ü –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏",
                         reply_markup=home_train_upperbody_ikb())
    await callback.message.delete()


@dp.callback_query_handler(lambda callback: callback.data == "—Å–ø–∏–Ω–∞_–¥–æ–º–∞")
async def home_train_back_menu(callback: types.CallbackQuery):
    await bot.send_photo(callback.from_user.id,
                         photo="https://www.menslife.com/upload/iblock/287/kachaem_spinu_v_trenazhernom_zale.jpg",
                         caption="–í—ã–±–µ—Ä–∏ –≥—Ä—É–ø–ø—É –º—ã—à—Ü –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏",
                         reply_markup=home_train_back_ikb())
    await callback.message.delete()


@dp.callback_query_handler(lambda callback: callback.data == "–ø—Ä–µ—Å—Å_–¥–æ–º–∞")
async def home_train_back_menu(callback: types.CallbackQuery):
    await bot.send_photo(callback.from_user.id,
                         photo="https://fitseven.ru/wp-content/uploads/2019/03/uprajneniya-na-press-doma-900x600.jpg",
                         caption="–í—ã–±–µ—Ä–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏",
                         reply_markup=home_train_press_ikb())
    await callback.message.delete()


@dp.callback_query_handler(lambda callback: callback.data == "–Ω–æ–≥–∏_–¥–æ–º–∞")
async def home_train_legs_menu(callback: types.CallbackQuery):
    await bot.send_photo(callback.from_user.id,
                         photo="https://avatars.dzeninfra.ru/get-zen_doc/164147/pub_5ca39c0e8f7b6100b3fd0a17_5ca39d183f197100b3e9b8bd/scale_1200",
                         caption="–í—ã–±–µ—Ä–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏",
                         reply_markup=home_train_legs_ikb())
    await callback.message.delete()


@dp.callback_query_handler(lambda callback: callback.data == "—Ñ—É–ª–±–∞–¥–∏_–¥–æ–º–∞")
async def home_train_legs_menu(callback: types.CallbackQuery):
    await bot.send_photo(callback.from_user.id,
                         photo="https://luna-askmen-images.askmen.com/1080x540/2018/03/08-044252-the_date_night_workout.jpg",
                         caption="–í—ã–±–µ—Ä–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏",
                         reply_markup=home_train_fulbody_ikb())
    await callback.message.delete()


@dp.callback_query_handler(lambda callback: callback.data == "–∫–∞—Ä–¥–∏–æ_–¥–æ–º–∞")
async def home_train_legs_menu(callback: types.CallbackQuery):
    await bot.send_photo(callback.from_user.id,
                         photo="https://www.nastroy.net/pic/images/202004/78415-1586881406.jpg",
                         caption="–í—ã–±–µ—Ä–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏",
                         reply_markup=home_train_kardio_ikb())
    await callback.message.delete()


# endregion
"""************************************************** –û–±—Ä–∞–±–æ—Ç–∫–∞ –º—ã—à—Ü –î–û–ú–ê *******************************************************************"""


# region –æ–±—Ä–∞–±–æ—Ç–∫–∞ –º—ã—à—Ü –≤–µ—Ä—Ö–∞ —Ç–µ–ª–∞ HOME
@dp.callback_query_handler(lambda callback: callback.data == "—Ç—Ä–∏—Ü–µ–ø—Å_–¥–æ–º–∞")
async def home_train_triceps_menu(callback: types.CallbackQuery):
    await bot.send_photo(callback.from_user.id,
                         photo="https://img.championat.com/c/1200x900/news/big/m/w/domashnjaja-trenirovka-uprazhnenija-dlja-muzhchin_15859067672068727188.jpg",
                         caption="–í—ã–±–µ—Ä–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ",
                         reply_markup=home_train_triceps_ikb())
    await callback.answer()
    await callback.message.delete()


@dp.callback_query_handler(lambda callback: callback.data == "–±–∏—Ü–µ–ø—Å_–¥–æ–º–∞")
async def home_train_triceps_menu(callback: types.CallbackQuery):
    await bot.send_photo(callback.from_user.id,
                         photo="https://sportishka.com/uploads/posts/2022-11/1667579842_1-sportishka-com-p-krasivii-bitseps-krasivo-1.jpg",
                         caption="–í—ã–±–µ—Ä–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ",
                         reply_markup=home_train_biceps_ikb())
    await callback.answer()
    await callback.message.delete()


@dp.callback_query_handler(lambda callback: callback.data == "–≥—Ä—É–¥–Ω—ã–µ_–¥–æ–º–∞")
async def home_train_triceps_menu(callback: types.CallbackQuery):
    await bot.send_photo(callback.from_user.id,
                         photo="https://pic.sport.ua/images/media/orig/74/16035.jpg",
                         caption="–í—ã–±–µ—Ä–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ",
                         reply_markup=home_train_chest_ikb())
    await callback.answer()
    await callback.message.delete()


# endregion
# region –æ–±—Ä–∞–±–æ—Ç–∫–∞ –º—ã—à—Ü —Å–ø–∏–Ω—ã HOME
@dp.callback_query_handler(lambda callback: callback.data == "–≤–µ—Ä—Ö_—Å–ø–∏–Ω—ã_–¥–æ–º–∞")
async def home_train_upperBACK_menu(callback: types.CallbackQuery):
    await bot.send_photo(callback.from_user.id,
                         photo="https://www.mentoday.ru/upload/img_cache/520/520660d70d1a56ed1f587fc62d3febab_ce_2800x1862x0x2_cropped_666x444.jpg",
                         caption="–í—ã–±–µ—Ä–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ",
                         reply_markup=home_train_upperBACK_ikb())
    await callback.answer()
    await callback.message.delete()


@dp.callback_query_handler(lambda callback: callback.data == "–Ω–∏–∑_—Å–ø–∏–Ω—ã_–¥–æ–º–∞")
async def home_train_upperBACK_menu(callback: types.CallbackQuery):
    await bot.send_photo(callback.from_user.id,
                         photo="https://vashsport.com/wp-content/uploads/kak-nakachat-spinu-doma.jpg",
                         caption="–í—ã–±–µ—Ä–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ",
                         reply_markup=home_train_downBACK_ikb())
    await callback.answer()
    await callback.message.delete()


# endregion
"""****************************************** –î–û–ú–ê –£–ü–†–ê–ñ–ù–ï–ù–ò–Ø *******************************************************"""


# region triceps exersize HOME
@dp.callback_query_handler(lambda callback: callback.data == "–æ—Ç–∂–∏–º–∞–Ω–∏—è_–¥–æ–º–∞")
async def home_train_triceps_PUSH(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ:  –æ—Ç–∂–∏–º–∞–Ω–∏—è')


@dp.callback_query_handler(lambda callback: callback.data == "–æ—Ç–∂–∏–º–∞–Ω–∏—è_—Å–∑–∞–¥–∏_–¥–æ–º–∞")
async def home_train_triceps_backPUSH(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ:\n–æ—Ç–∂–∏–º–∞–Ω–∏–µ —Å –æ–ø–æ—Ä–æ–π —Å–∑–∞–¥–∏')


@dp.callback_query_handler(lambda callback: callback.data == "–∞–ª–º–∞–∑–Ω—ã–µ_–æ—Ç–∂–∏–º–∞–Ω–∏—è_–¥–æ–º–∞")
async def home_train_triceps_almazPUSH(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ:\n–∞–ª–º–∞–∑–Ω—ã–µ –æ—Ç–∂–∏–º–∞–Ω–∏—è')


# endregion
# region biceps exeresize HOME
@dp.callback_query_handler(lambda callback: callback.data == "–∏–∑–æ–ª—è—Ü–∏—è_–±–∏—Ü–µ–ø—Å_–¥–æ–º–∞")
async def home_train_biceps_ispalte(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ:  –∏–∑–æ–ª—è—Ü–∏—è –±–∏—Ü–µ–ø—Å')


@dp.callback_query_handler(lambda callback: callback.data == "—É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ_–º–æ–ª–æ—Ç—ã_–¥–æ–º–∞")
async def home_train_bicepse_molot(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ:  –º–æ–ª–æ—Ç–∫–∏')


# endregion
# region chest exersize HOME
@dp.callback_query_handler(lambda callback: callback.data == "–æ—Ç–∂–∏–º–∞–Ω–∏—è_—Å_—Ö–ª–æ–ø–∫–æ–º_–¥–æ–º–∞")
async def home_train_chest_clapPUSH(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ:  –æ—Ç–∂–∏–º–∞–Ω–∏—è —Å —Ö–ª–æ–ø–∫–æ–º')


@dp.callback_query_handler(lambda callback: callback.data == "–ø—É–ª–æ–≤–µ—Ä_–¥–æ–º–∞")
async def home_train_chest_pulover(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ:  –ø—É–ª–æ–≤–µ—Ä')


@dp.callback_query_handler(lambda callback: callback.data == "–±–∞–∑–æ–≤—ã–µ_–æ—Ç–∂–∏–º–∞–Ω–∏—è_–¥–æ–º–∞")
async def home_train_triceps_basePUSH(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ:  –±–∞–∑–æ–≤—ã–µ –æ—Ç–∂–∏–º–∞–Ω–∏—è')


# endregion


# region uper back exersize HOME
@dp.callback_query_handler(lambda callback: callback.data == "—Ç—è–≥–∞_—Å_–æ–ø–æ—Ä–æ–π_–¥–æ–º–∞")
async def home_train_upperback_pull_opora(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: —Ç—è–≥–∞ —Å —É–ø–æ—Ä–æ–º')


@dp.callback_query_handler(lambda callback: callback.data == "–ø—É–ª–æ–≤–µ—Ä_—Å–ø–∏–Ω—ã_–¥–æ–º–∞")
async def home_train_upperback_pulover(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –ø—É–ª–æ–≤–µ—Ä —Å–ø–∏–Ω—ã')


# endregion
# region DOWNback exersize HOME
@dp.callback_query_handler(lambda callback: callback.data == "–≥–∏–ø–µ—Ä—ç–∫—Å—Ç–µ–Ω–∑–∏—è_–¥–æ–º–∞")
async def home_train_downback_hyperextension(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –≥–∏–ø–µ—Ä—ç–∫—Å—Ç–µ–Ω–∑–∏—è')


@dp.callback_query_handler(lambda callback: callback.data == "–º–∏–Ω–∏_—Å—Ç–∞–Ω–æ–≤–∞—è_–¥–æ–º–∞")
async def home_train_downback_miniDEADLIFT(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –º–∏–Ω–∏ —Å—Ç–∞–Ω–æ–≤–∞—è')


# endregion


# region press exersize HOME
@dp.callback_query_handler(lambda callback: callback.data == "–ø—Ä—è–º—ã–µ_—Å–∫—Ä—É—á–∏–≤–∞–Ω–∏—è_–¥–æ–º–∞")
async def home_train_press_curl(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –ü—Ä—è–º—ã–µ —Å–∫—Ä—É—á–∏–≤–∞–Ω–∏—è')


@dp.callback_query_handler(lambda callback: callback.data == "–±–æ–∫–æ–≤—ã–µ_—Å–∫—Ä—É—á–∏–≤–∞–Ω–∏—è_–¥–æ–º–∞")
async def home_train_press_sideCURL(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –ë–æ–∫–æ–≤—ã–µ —Å–∫—Ä—É—á–∏–≤–∞–Ω–∏—è')


@dp.callback_query_handler(lambda callback: callback.data == "–ø–æ–¥—ä–µ–º_–Ω–æ–≥_–Ω–∞_–±–æ–∫—É_–¥–æ–º–∞")
async def home_train_press_side_legs(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –ü–æ–¥—ä–µ–º –Ω–æ–≥ –ª–µ–∂–∞ –Ω–∞ –±–æ–∫—É')


@dp.callback_query_handler(lambda callback: callback.data == "—Å–∫—Ä—É—á–∏–≤–∞–Ω–∏—è_–¥–æ_–Ω–æ—Å–∫–æ–≤_–¥–æ–º–∞")
async def home_train_press_touch_leg(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –ö–∞—Å–∞–Ω–∏–µ –Ω–æ—Å–∫–æ–≤')


# endregion


# region LEGS exersize HOME
@dp.callback_query_handler(lambda callback: callback.data == "–ø—Ä–∏—Å–µ–¥–∞–Ω–∏—è_—Å_–≤–µ—Å–æ–º_–¥–æ–º–∞")
async def home_train_legs_squats(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –ü—Ä–∏—Å–µ–¥–∞–Ω–∏—è —Å –≤–µ—Å–æ–º')


@dp.callback_query_handler(lambda callback: callback.data == "–º–∏–Ω–∏_—Å—Ç–∞–Ω–æ–≤–∞—è_—É–∑–∫–æ_–¥–æ–º–∞")
async def home_train_legs_miniDEADLIFT(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –º–∏–Ω–∏ - —Å—Ç–∞–Ω–æ–≤–∞—è —É–∑–∫–æ')


@dp.callback_query_handler(lambda callback: callback.data == "—Ö–∏–ø_—Ç—Ä–∞—Å—Ç_–¥–æ–º–∞")
async def home_train_legs_miniDEADLIFT(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –•–∏–ø - –¢—Ä–∞—Å—Ç ')


# endregion


# region FULBODY exersize HOME
@dp.callback_query_handler(lambda callback: callback.data == "–ø–æ–¥–Ω—è—Ç–∏–µ_–≤–µ—Å–∞_–Ω–∞_–ø–æ–¥–æ–±–∏–∏_–≥–∏—Ä–∏_–¥–æ–º–∞")
async def home_train_fulbody_girya(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –í–∑—Ä—ã–≤ —Å–Ω–∏–∑—É ')


@dp.callback_query_handler(lambda callback: callback.data == "–±–µ—Ä–ø–∏_–¥–æ–º–∞")
async def home_train_fulbody_berpi(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –ü—Ä–æ—Å—Ç–æ –±–µ—Ä–ø–∏')


# endregion


# region kardio HOME
@dp.callback_query_handler(lambda callback: callback.data == "–≥—É—Å–µ–Ω–∏—Ü–∞_–¥–æ–º–∞")
async def home_train_cardio_caterpillar(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –ü—Ä–æ—Å—Ç–æ –≥—É—Å–µ–Ω–∏—Ü–∞')


@dp.callback_query_handler(lambda callback: callback.data == "–ø—Ä—ã–∂–∫–∏_–¥–æ–º–∞")
async def home_train_cardio_jump(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –ü–æ–ø—Ä—ã–≥—É—à–∫–∏')


@dp.callback_query_handler(lambda callback: callback.data == "–ª–µ—Å—Ç–Ω–∏—Ü–∞_–¥–æ–º–∞")
async def home_train_cardio_ladder(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –ª—é–±–∏–º–∞—è –ª–µ—Å—Ç–Ω–∏—Ü–∞')


# endregion

"""************************************************** –¢–†–ï–ù–ò–†–û–í–ö–ò –í –ó–ê–õ–ï *******************************************************************"""


@dp.callback_query_handler(lambda callback: callback.data == "—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏_–≤_–∑–∞–ª–µ")
async def train_in_gym_menu(callback: types.CallbackQuery):
    await bot.send_photo(callback.from_user.id,
                         photo="https://www.goldsgym.ru/upload/medialibrary/4c0/4c05e8b013f2804d7beca4a07267698d.jpg",
                         caption="–ö–∞–∫—É—é –æ–±–ª–∞—Å—Ç—å —Ö–æ—á–µ—à—å –ø—Ä–æ–∫–∞—á–∞—Ç—å?",
                         reply_markup=gym_train_menu_ikb())
    await callback.message.delete()


# region muskle group GYM
@dp.callback_query_handler(lambda callback: callback.data == "–≤–µ—Ä—Ö_—Ç–µ–ª–∞_–∑–∞–ª")
async def gym_train_upperbody_menu(callback: types.CallbackQuery):
    await bot.send_photo(callback.from_user.id,
                         photo="https://builderbody.ru/wp-content/uploads/2017/12/1-10-850x599.jpg",
                         caption="–í—ã–±–µ—Ä–∏ –≥—Ä—É–ø–ø—É –º—ã—à—Ü –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏",
                         reply_markup=gym_train_upperbody_ikb())
    await callback.message.delete()


@dp.callback_query_handler(lambda callback: callback.data == "—Å–ø–∏–Ω–∞_–∑–∞–ª")
async def home_train_back_menu(callback: types.CallbackQuery):
    await bot.send_photo(callback.from_user.id,
                         photo="https://xage.ru/media/posts/2015/2/24/pochemu-stoit-zanimatsja-v-trenazhernom-zale.jpg",
                         caption="–í—ã–±–µ—Ä–∏ –≥—Ä—É–ø–ø—É –º—ã—à—Ü –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏",
                         reply_markup=gym_train_back_ikb())
    await callback.message.delete()


# endregion


"""************************************************** –û–±—Ä–∞–±–æ—Ç–∫–∞ –º—ã—à—Ü GYM *******************************************************************"""


# region –º—ã—à—Ü—ã –≤–µ—Ä—Ö–∞ —Ç–µ–ª–∞
@dp.callback_query_handler(lambda callback: callback.data == "—Ç—Ä–∏—Ü–µ–ø—Å_–∑–∞–ª")
async def gym_train_triceps_menu(callback: types.CallbackQuery):
    await bot.send_photo(callback.from_user.id,
                         photo="https://img.championat.com/c/1200x900/news/big/m/w/domashnjaja-trenirovka-uprazhnenija-dlja-muzhchin_15859067672068727188.jpg",
                         caption="–í—ã–±–µ—Ä–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ",
                         reply_markup=gym_train_triceps_ikb())
    await callback.answer()
    await callback.message.delete()


@dp.callback_query_handler(lambda callback: callback.data == "–±–∏—Ü–µ–ø—Å_–∑–∞–ª")
async def gym_train_biceps_menu(callback: types.CallbackQuery):
    await bot.send_photo(callback.from_user.id,
                         photo="https://sportishka.com/uploads/posts/2022-11/1667579842_1-sportishka-com-p-krasivii-bitseps-krasivo-1.jpg",
                         caption="–í—ã–±–µ—Ä–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ",
                         reply_markup=gym_train_biceps_ikb())
    await callback.answer()
    await callback.message.delete()


@dp.callback_query_handler(lambda callback: callback.data == "–≥—Ä—É–¥–Ω—ã–µ_–∑–∞–ª")
async def gym_train_chest_menu(callback: types.CallbackQuery):
    await bot.send_photo(callback.from_user.id,
                         photo="https://pic.sport.ua/images/media/orig/74/16035.jpg",
                         caption="–í—ã–±–µ—Ä–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ",
                         reply_markup=gym_train_chest_ikb())
    await callback.answer()
    await callback.message.delete()


# endregion
# region –º—ã—à—Ü—ã —Å–ø–∏–Ω—ã
@dp.callback_query_handler(lambda callback: callback.data == "–≤–µ—Ä—Ö_—Å–ø–∏–Ω—ã_–∑–∞–ª")
async def gym_train_upperBACK_menu(callback: types.CallbackQuery):
    await bot.send_photo(callback.from_user.id,
                         photo="https://vashsport.com/wp-content/uploads/uprazhneniya-dlya-spiny-v-trenazhernom-zale-640x480.jpg",
                         caption="–í—ã–±–µ—Ä–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ",
                         reply_markup=gym_train_upperBACK_ikb())
    await callback.answer()
    await callback.message.delete()


@dp.callback_query_handler(lambda callback: callback.data == "–Ω–∏–∑_—Å–ø–∏–Ω—ã_–∑–∞–ª")
async def gym_train_downBACK_menu(callback: types.CallbackQuery):
    await bot.send_photo(callback.from_user.id,
                         photo="https://gercules.fit/wp-content/uploads/2018/12/Screenshot.png",
                         caption="–í—ã–±–µ—Ä–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ",
                         reply_markup=gym_train_downBACK_ikb())
    await callback.answer()
    await callback.message.delete()


# endregion
# region –º—ã—à—Ü—ã –ù–û–ì
@dp.callback_query_handler(lambda callback: callback.data == "–∫–≤–∞–¥—Ä–∏—Ü–µ–ø—Å_–∑–∞–ª")
async def gym_train_qvadriveps_menu(callback: types.CallbackQuery):
    await bot.send_photo(callback.from_user.id,
                         photo="https://builderbody.ru/wp-content/uploads/2016/09/1-2-850x487.jpg",
                         caption="–í—ã–±–µ—Ä–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ",
                         reply_markup=gym_train_quadLEGS_ikb())
    await callback.answer()
    await callback.message.delete()


@dp.callback_query_handler(lambda callback: callback.data == "–∑–∞–¥–Ω—è—è_—á–∞—Å—Ç—å_–±–µ–¥—Ä–∞_–∑–∞–ª")
async def gym_train_bicepsLEGS_menu(callback: types.CallbackQuery):
    await bot.send_photo(callback.from_user.id,
                         photo="https://vashsport.com/wp-content/uploads/uprazhneniya-na-biceps-bedra.jpg",
                         caption="–í—ã–±–µ—Ä–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ",
                         reply_markup=gym_train_bicepsLEGS_ikb())
    await callback.answer()
    await callback.message.delete()


@dp.callback_query_handler(lambda callback: callback.data == "–∏–∫—Ä–æ–Ω–æ–∂–Ω—ã–µ_–º—ã—à—Ü—ã_–∑–∞–ª")
async def gym_train_icriLEGS_menu(callback: types.CallbackQuery):
    await bot.send_photo(callback.from_user.id,
                         photo="https://www.iphones.ru/wp-content/uploads/2017/05/01-Calf-and-Buttocks-Training.jpg",
                         caption="–í—ã–±–µ—Ä–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ",
                         reply_markup=gym_train_icriLEGS_ikb())
    await callback.answer()
    await callback.message.delete()


@dp.callback_query_handler(lambda callback: callback.data == "–±–µ–¥—Ä–∞_–∑–∞–ª")
async def gym_train_assLEGS_menu(callback: types.CallbackQuery):
    await bot.send_photo(callback.from_user.id,
                         photo="https://img.championat.com/s/735x490/news/big/v/x/kachaem-vnutrennyuyu-poverhnost-bedra_16657512771904848910.jpg",
                         caption="–í—ã–±–µ—Ä–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ",
                         reply_markup=gym_train_assLEGS_ikb())
    await callback.answer()
    await callback.message.delete()


# endregion
# region –æ—Å—Ç–∞–ª—å–Ω—ã–µ –º—ã—à—Ü—ã
@dp.callback_query_handler(lambda callback: callback.data == "–ø—Ä–µ—Å—Å_–∑–∞–ª")
async def gym_train_press_menu(callback: types.CallbackQuery):
    await bot.send_photo(callback.from_user.id,
                         photo="https://the-challenger.ru/wp-content/uploads/2017/05/shutterstock_598276976.jpg",
                         caption="–í—ã–±–µ—Ä–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏",
                         reply_markup=gym_train_press_ikb())
    await callback.message.delete()


@dp.callback_query_handler(lambda callback: callback.data == "–ø–ª–µ—á–∏_–∑–∞–ª")
async def gym_train_shoulders_menu(callback: types.CallbackQuery):
    await bot.send_photo(callback.from_user.id,
                         photo="https://www.muscleandfitness.com/wp-content/uploads/2018/05/1109-shoulders.jpg?quality=86&strip=all",
                         caption="–í—ã–±–µ—Ä–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏",
                         reply_markup=gym_train_shoulders_ikb())
    await callback.message.delete()


@dp.callback_query_handler(lambda callback: callback.data == "–Ω–æ–≥–∏_–∑–∞–ª")
async def gym_train_legs_menu(callback: types.CallbackQuery):
    await bot.send_photo(callback.from_user.id,
                         photo="https://musclefit.info/wp-content/uploads/2021/08/trenazhery-dlya-nog-v-trenazhernom-zale-min.jpg",
                         caption="–í—ã–±–µ—Ä–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏",
                         reply_markup=gym_train_legs_ikb())
    await callback.message.delete()


@dp.callback_query_handler(lambda callback: callback.data == "–≤—Å—ë_—Ç–µ–ª–æ_–∑–∞–ª")
async def gym_train_fulbody_menu(callback: types.CallbackQuery):
    await bot.send_photo(callback.from_user.id,
                         photo="https://musclefit.info/wp-content/uploads/2021/09/full-body-min.jpg",
                         caption="–í—ã–±–µ—Ä–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏",
                         reply_markup=gym_train_fulbody_ikb())
    await callback.message.delete()


@dp.callback_query_handler(lambda callback: callback.data == "–∫–∞—Ä–¥–∏–æ_–∑–∞–ª")
async def gym_train_cardio_menu(callback: types.CallbackQuery):
    await bot.send_photo(callback.from_user.id,
                         photo="https://images.thevoicemag.ru/upload/img_cache/d0e/d0e39276def92ea645a041273703fa4a_cropped_666x445.jpg",
                         caption="–í—ã–±–µ—Ä–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏",
                         reply_markup=gym_train_kardio_ikb())
    await callback.message.delete()


# endregion

"""****************************************** GYM –£–ü–†–ê–ñ–ù–ï–ù–ò–Ø *******************************************************"""


# region –í–ï–†–• –¢–ï–õ–ê –ó–ê–õ
@dp.callback_query_handler(lambda callback: callback.data == "—Ñ—Ä–∞–Ω–Ω—É–∑—Å–∫–∏–π_–∂–∏–º_–∑–∞–ª")
async def gym_train_triceps_francePush(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: —Ñ—Ä–∞–Ω—Ü—É–∑–∫–∏–π –∂–∏–º')


@dp.callback_query_handler(lambda callback: callback.data == "–∂–∏–º_–ª–µ–∂–∞_—É–∑–∫–∏–º_—Ö–≤–∞—Ç–æ–º_–∑–∞–ª")
async def gym_train_triceps_uzkoPUSH(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –∂–∏–º –ª–µ–∂–∞ —É–∑–∫–∏–º —Ö–≤–∞—Ç–æ–º')


@dp.callback_query_handler(lambda callback: callback.data == "–∂–∏–º_–ª–µ–∂–∞_–∫–ª–∞—Å—Å–∏–∫–∞_–∑–∞–ª")
async def gym_train_triceps_classicPUSH(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –∂–∏–º –ª–µ–∂–∞ classic')


@dp.callback_query_handler(lambda callback: callback.data == "–±—Ä—É—Å—å—è_–∑–∞–ª")
async def gym_train_triceps_brusiya(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –±—Ä—É—Å—å—è')


@dp.callback_query_handler(lambda callback: callback.data == "–∫—Ä–æ—Å—Å–æ–≤–µ—Ä_–∑–∞–ª")
async def gym_train_triceps_crossover(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –∫—Ä–æ—Å—Å–æ–≤–µ—Ä')


@dp.callback_query_handler(lambda callback: callback.data == "–ø–æ–¥—ä–µ–º_–∏–∑–æ–≥–Ω—É—Ç–æ–≥–æ_–≥—Ä–∏—Ñ–∞_–∑–∞–ª")
async def gym_train_biceps_curlGRif(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –∏–∑–æ–≥–Ω—É—Ç—ã–π –Ω–∞ –±–∏—Ü–µ–ø—Å')


@dp.callback_query_handler(lambda callback: callback.data == "–ø–æ–¥—ä–µ–º_—à—Ç–∞–Ω–≥–∏_–Ω–∞_–±–∏—Ü–µ–ø—Å_–∑–∞–ª")
async def gym_train_biceps_grif(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: —à—Ç–∞–Ω–≥–∞ –Ω–∞ –±–∏—Ü–µ–ø—Å')


@dp.callback_query_handler(lambda callback: callback.data == "–≥–∞–Ω—Ç–µ–ª–∏_—Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–º_—Ö–≤–∞—Ç–æ–º_–∑–∞–ª")
async def gym_train_biceps_gantel_ISOLATE(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –ì–∞–Ω—Ç–µ–ª–∏ –∏–∑–æ–ª—è—Ü–∏—è')


@dp.callback_query_handler(lambda callback: callback.data == "—É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ_–º–æ–ª–æ—Ç—ã_–∑–∞–ª")
async def gym_train_biceps_molot(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –ú–æ–ª–æ—Ç–æ—á–∫–∏')


@dp.callback_query_handler(lambda callback: callback.data == "–∂–∏–º_–≥–∞–Ω—Ç–µ–ª–µ–π_–ª–µ–∂–∞_–∑–∞–ª")
async def gym_train_chest_gantelPUSH(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –ñ–∏–º –≥–∞–Ω—Ç–µ–ª–µ–π')


@dp.callback_query_handler(lambda callback: callback.data == "–≥–∞–Ω—Ç–µ–ª–∏_–Ω–∞–∫–ª–æ–Ω–Ω–∞—è_—Å–∫–∞–º—å—è_–∑–∞–ª")
async def gym_train_chest_gantel_curl_PUSH(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –ñ–∏–º –≥–∞–Ω—Ç–µ–ª–µ–π –Ω–∞ –Ω–∞–∫–ª–æ–Ω–Ω–æ–π —Å–∫–∞–º—å–µ')


@dp.callback_query_handler(lambda callback: callback.data == "—à—Ç–∞–Ω–≥–∞_–Ω–∞–∫–ª–æ–Ω–Ω–∞—è_—Å–∫–∞–º—å—è_–∑–∞–ª")
async def gym_train_chest_grif_curl_PUSH(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –ñ–∏–º —à—Ç–∞–Ω–≥–∏ –Ω–∞ –Ω–∞–∫–ª–æ–Ω–Ω–æ–π —Å–∫–∞–º—å–µ')


# endregion

# region –°–ü–ò–ù–ê –ó–ê–õ
@dp.callback_query_handler(lambda callback: callback.data == "–ø–æ–¥—Ç—è–≥–∏–≤–∞–Ω–∏—è_–∑–∞–ª")
async def gym_train_upperBACK_grif_pull_ups(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –ø–æ–¥—Ç—è–≥–∏–≤–∞–Ω–∏—è')


@dp.callback_query_handler(lambda callback: callback.data == "—Ç—è–≥–∞_–Ω–∞_–Ω–∞–∫–ª–æ–Ω–Ω–æ–π_—Å–∫–∞–º—å–µ_–∑–∞–ª")
async def gym_train_upperBACK_lift_na_scamie(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: —Ç—è–≥–∞ –Ω–∞ –Ω–∞–∫–ª–æ–Ω–Ω–æ–π —Å–∫–∞–º—å–µ')


@dp.callback_query_handler(lambda callback: callback.data == "—Ç—è–≥–∞_–Ω–∞_–Ω–∞–∫–ª–æ–Ω–Ω–æ–π_—Å–∫–∞–º—å–µ_–∑–∞–ª")
async def gym_train_upperBACK_grif_v_naklone(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: —Ç—è–≥–∞ —à—Ç–∞–Ω–≥–∏ –≤ –Ω–∞–∫–ª–æ–Ω–µ')


@dp.callback_query_handler(lambda callback: callback.data == "—Ç—è–≥–∞_–æ–¥–Ω–æ–π_—Å_—É–ø–æ—Ä–æ–º_–∑–∞–ª")
async def gym_train_upperBACK_ift_one_hand(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: —Ç—è–≥–∞ –æ–¥–Ω–æ–π —Ä—É–∫–æ–π')


@dp.callback_query_handler(lambda callback: callback.data == "—Å—Ç–∞–Ω–æ–≤–∞—è_—Ç—è–≥–∞_–∑–∞–ª")
async def gym_train_downBACK_deadlift(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –°—Ç–∞–Ω–æ–≤–∞—è —Ç—è–≥–∞')


@dp.callback_query_handler(lambda callback: callback.data == "–≥–∏–ø–µ—Ä—ç–∫—Å—Ç–µ–Ω–∑–∏—è_–∑–∞–ª")
async def gym_train_downBACK_hyperextensy(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –ì–∏–ø–µ—Ä—ç–∫—Å—Ç–µ–Ω–∑–∏—è')


# endregion

# region –ù–û–ì–ò –ó–ê–õ
@dp.callback_query_handler(lambda callback: callback.data == "–ø—Ä–∏—Å–µ–¥_—Å–æ_—à—Ç–∞–Ω–≥–æ–π_–∑–∞–ª")
async def gym_train_quadLEGS_prised_grif(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –ü—Ä–∏—Å–µ–¥ —Å–æ —à—Ç–∞–Ω–≥–æ–π')


@dp.callback_query_handler(lambda callback: callback.data == "–ø—Ä–∏—Å–µ–¥_—Å_–≥–∞–Ω—Ç–µ–ª—è–º–∏_–∑–∞–ª")
async def gym_train_quadLEGS_prised_gantel(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –ü—Ä–∏—Å–µ–¥ —Å –≥–∞–Ω—Ç–µ–ª—è–º–∏')


@dp.callback_query_handler(lambda callback: callback.data == "–ø—Ä–∏—Å–µ–¥_–Ω–∞_–æ–¥–Ω–æ–π_–Ω–æ–≥–µ_–∑–∞–ª")
async def gym_train_bicepsLEGS_prised_one_legs(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –ü—Ä–∏—Å–µ–¥ –Ω–∞ –æ–¥–Ω–æ–π –Ω–æ–≥–µ')


@dp.callback_query_handler(lambda callback: callback.data == "–Ω–∞_–Ω–æ—Å–∫–∏_—à—Ç–∞–Ω–≥–∞_–∑–∞–ª")
async def gym_train_icriLEGS_na_noski_grif(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –ü–æ–¥—ä–µ–º—ã –Ω–∞ –Ω–æ—Å–∫–∏ —Å–æ —à—Ç–∞–Ω–≥–æ–π')


@dp.callback_query_handler(lambda callback: callback.data == "–Ω–∞_–Ω–æ—Å–∫–∏_–≥–∞–Ω—Ç–µ–ª–∏_–∑–∞–ª")
async def gym_train_icriLEGS_na_noski_gantel(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –ü–æ–¥—ä–µ–º—ã –Ω–∞ –Ω–æ—Å–∫–∏ —Å–æ –≥–∞–Ω—Ç–µ–ª—è–º–∏')


@dp.callback_query_handler(lambda callback: callback.data == "–º–æ—Å—Ç–∏–∫_—Å–æ_—à—Ç–∞–Ω–≥–æ–π_–∑–∞–ª")
async def gym_train_assLEGS_most_grif(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –í–æ–∑—å–º–∏ —ç—Ç—É –¥—É—Ä—É')


@dp.callback_query_handler(lambda callback: callback.data == "–º–æ—Å—Ç–∏–∫_–∑–∞–ª")
async def gym_train_assLEGS_most(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –í–æ–∑—å–º–∏ —ç—Ç—É –¥—É—Ä—É')


# endregion

# region –ü–†–ï–°–° –ó–ê–õ
@dp.callback_query_handler(lambda callback: callback.data == "–ø—Ä—è–º—ã–µ_—Å–∫—Ä—É—á–∏–≤–∞–Ω–∏—è_–∑–∞–ª")
async def gym_train_press_right_curl(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –û–±—ã—á–Ω—ã–µ —Å–∫—Ä—É—á–∏–≤–∞–Ω–∏—è')


@dp.callback_query_handler(lambda callback: callback.data == "–±–æ–∫–æ–≤—ã–µ_—Å–∫—Ä—É—á–∏–≤–∞–Ω–∏—è_–∑–∞–ª")
async def gym_train_press_bokoviy_curl(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –ë–æ–∫–æ–≤—ã–µ —Å–∫—Ä—É—á–∏–≤–∞–Ω–∏—è')


@dp.callback_query_handler(lambda callback: callback.data == "–±–æ–∫–æ–≤—ã–µ_—Å_–¥–æ–ø_–≤–µ—Å–æ–º_–∑–∞–ª")
async def gym_train_press_bokoviy_curl_dop(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –ë–æ–∫–æ–≤—ã–µ —Å–∫—Ä—É—á–∏–≤–∞–Ω–∏—è —Å –¥–æ–ø –≤–µ—Å–æ–º')


@dp.callback_query_handler(lambda callback: callback.data == "–ø–æ–¥—ä–µ–º_–Ω–æ–≥_–Ω–∞_–±—Ä—É—Å—å—è—Ö_–∑–∞–ª")
async def gym_train_press_bokoviy_curl_dop(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –ü–æ–¥—ä–µ–º –Ω–æ–≥ –Ω–∞ –±—Ä—É—Å—å—è—Ö')


# endregion

# region –ü–õ–ï–ß–ò –ó–ê–õ
@dp.callback_query_handler(lambda callback: callback.data == "–∂–∏–º_–∞—Ä–Ω–æ–ª—å–¥–∞_–∑–∞–ª")
async def gym_train_shoulders_arnold_push(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –ñ–∏–º –ê—Ä–Ω–æ–ª—å–¥–∞')


@dp.callback_query_handler(lambda callback: callback.data == "–∂–∏–º_–≥–∞–Ω—Ç–µ–ª–µ–π_–≤–≤–µ—Ä—Ö_–∑–∞–ª")
async def gym_train_shoulders_up_push(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –ñ–∏–º –Ω–∞ –ø–ª–µ—á–∏')


@dp.callback_query_handler(lambda callback: callback.data == "–ø—Ä–æ—Ç—è–∂–∫–∞_–≥–∞–Ω—Ç–µ–ª–µ–π_–∑–∞–ª")
async def gym_train_shoulders_protagca(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –ü—Ä–æ—Ç—è–∂–∫–∞')


@dp.callback_query_handler(lambda callback: callback.data == "–º–∞—Ö–∏_–≥–∞–Ω—Ç–µ–ª—è–º–∏_–∑–∞–ª")
async def gym_train_shoulders_mahi_gantel(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –ú–∞—Ö–∏ –≥–∞–Ω—Ç–µ–ª—è–º–∏')


@dp.callback_query_handler(lambda callback: callback.data == "–ø–æ–¥—ä–µ–º_—à—Ç–∞–Ω–≥–∏_–Ω–∞–¥_–≥–æ–ª–æ–≤–æ–π_–∑–∞–ª")
async def gym_train_shoulders_grif_up_head(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –ü–æ–¥—ä–µ–º —à—Ç–∞–Ω–≥–∏ –Ω–∞–¥ –≥–æ–ª–æ–≤–æ–π')


@dp.callback_query_handler(lambda callback: callback.data == "—Ç—è–≥–∞_–ª–µ–∂–∞_–Ω–∞_—Å–∫–∞–º—å–µ_–∑–∞–ª")
async def gym_train_shoulders_grif_up_head(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –¢—è–≥–∞ –Ω–∞ –∑–∞–¥–Ω–∏–µ –¥–µ–ª—å—Ç—ã')


# endregion

# region –§–£–õ–ë–ê–î–ò –ó–ê–õ
@dp.callback_query_handler(lambda callback: callback.data == "–≤–∑—Ä—ã–≤_—Å–æ_—à—Ç–∞–Ω–≥–æ–π_–∑–∞–ª")
async def gym_train_fulbody_grif_boon(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –í–∑—Ä—ã–≤ —Å–æ —à—Ç–∞–Ω–≥–æ–π')


@dp.callback_query_handler(lambda callback: callback.data == "—Ç–æ–ª–∫–∞–Ω–∏–µ_–≥–∏—Ä–∏_–∑–∞–ª")
async def gym_train_fulbody_girya(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –¢–æ–ª–∫–∞–Ω–∏–µ –≥–∏—Ä–∏')


# endregion

# region –ö–ê–†–î–ò–û –ó–ê–õ
@dp.callback_query_handler(lambda callback: callback.data == "–±–æ–∫—Å_–∑–∞–ª")
async def gym_train_cardio_box(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –ë–æ–∫—Å')


@dp.callback_query_handler(lambda callback: callback.data == "—Å–∫–∞–∫–∞–ª–∫–∞_–∑–∞–ª")
async def gym_train_cardio_scacalka(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –°–∫–∞–∫–∞–ª–∫–∞')


@dp.callback_query_handler(lambda callback: callback.data == "–•–æ–¥—å–±–∞_–∑–∞–ª")
async def gym_train_cardio_hodba(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –•–æ–¥—å–±–∞')


@dp.callback_query_handler(lambda callback: callback.data == "–±–µ—Ä–ø–∏_–∑–∞–ª")
async def gym_train_cardio_berpi(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –ë–µ—Ä–ø–∏')


@dp.callback_query_handler(lambda callback: callback.data == "–±–µ–≥_–∑–∞–ª")
async def gym_train_cardio_run(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –ë–µ–≥')


@dp.callback_query_handler(lambda callback: callback.data == "–ø—Ä—ã–∂–∫–∏_–∑–∞–ª")
async def gym_train_cardio_jump(callback: types.CallbackQuery):
    await callback.message.answer(
        "–ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:\n–º–µ—Å—Ç–æ –¥–ª—è —Å—Å—ã–ª–∫–∏  ")
    await callback.answer('–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –ü–æ–ø—Ä—ã–≥—É—à–∫–∏')


# endregion

"""******************************************  *******************************************************"""


######## return handlers
@dp.callback_query_handler(lambda callback: callback.data == "–≥–ª–∞–≤–Ω–æ–µ_–º–µ–Ω—é")
async def return_main_menu(callback: types.CallbackQuery):
    await callback.message.answer("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=main_menu_kb())
    await callback.answer("–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    await callback.message.delete()


if __name__ == "__main__":
    dp.middleware.setup(CustomMiddleware())
    executor.start_polling(dp,
                           skip_updates=True,
                           on_startup=on_startup)
